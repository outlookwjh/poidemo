package com.demo;import org.apache.poi.openxml4j.exceptions.InvalidFormatException;import org.apache.poi.util.Units;import org.apache.poi.xwpf.model.XWPFHeaderFooterPolicy;import org.apache.poi.xwpf.usermodel.*;import org.openxmlformats.schemas.wordprocessingml.x2006.main.*;import java.io.*;import java.lang.reflect.ParameterizedType;import java.math.BigInteger;import java.util.List;public class XWDFClass {    public static void main(String[] args) throws IOException, InvalidFormatException {        XWPFDocument doc = new XWPFDocument();        //设置标题        XWPFParagraph titleParagraph = doc.createParagraph();        //设置段落居中        titleParagraph.setAlignment(ParagraphAlignment.CENTER);        XWPFRun titleParagraphRun = titleParagraph.createRun();        titleParagraphRun.setText("Java PoI");        titleParagraphRun.setColor("000000");        titleParagraphRun.setFontSize(20);        //段落        XWPFParagraph firstParagraph = doc.createParagraph();        XWPFRun run1 = firstParagraph.createRun();        run1.setText("Java POI 生成word文件。");        run1.setColor("696969");        run1.setFontSize(16);        //设置页眉        CTSectPr sectPr = doc.getDocument().getBody().addNewSectPr();        XWPFHeaderFooterPolicy policy = new XWPFHeaderFooterPolicy(doc, sectPr);        CTP ctpHeader = CTP.Factory.newInstance();        CTR ctrHeader = ctpHeader.addNewR();        CTText ctText = ctrHeader.addNewT();        String headerText = "这是页眉";        ctText.setStringValue(headerText);        XWPFParagraph headerParagraph  = new XWPFParagraph(ctpHeader, doc);        //设置为右对齐        headerParagraph.setAlignment(ParagraphAlignment.CENTER);        XWPFParagraph[] parsHeader  = new XWPFParagraph[1];        parsHeader[0]=headerParagraph;        XWPFHeader header = policy.createHeader(XWPFHeaderFooterPolicy.DEFAULT, parsHeader);        XWPFParagraph paragraph = header.createParagraph();        //之前测试不成功的原因是创建paragraph方式的区别，之前是        // XWPFParagraph headerParagraph  = new XWPFParagraph(ctpHeader, doc)的方式创建，发现插入图片不成功        //修改使用XWPFParagraph paragraph = header.createParagraph()的方式创建，插入图片成功        //几个创建流程   doc--->CTSectPr,policy-->header-->paragraph-->run-->addPicture        XWPFRun run = paragraph.createRun();        //XWPFRun run = headerParagraph.createRun();        String pic = XWDFClass.class.getClassLoader().getResource("").getPath()+"csdn-logo_.png";        String fileName = pic.substring(1);        InputStream is = new FileInputStream(new File(pic));        XWPFPicture picture = run.addPicture(is, XWPFDocument.PICTURE_TYPE_JPEG, fileName, Units.toEMU(60), Units.toEMU(40));        List<XWPFPictureData> allPackagePictures = header.getAllPackagePictures();        String blipId = "";        for (XWPFPictureData allPackagePicture : allPackagePictures) {             blipId = header.getRelationId(allPackagePicture);        }        picture.getCTPicture().getBlipFill().getBlip().setEmbed( blipId );        run.addTab();        //创建页脚        createFooter(doc, policy, headerParagraph);        //创建表格        createTable(doc);        String path = XWDFClass.class.getClassLoader().getResource("").getPath();        File file = new File(path+"wjh.doc");        FileOutputStream os = new FileOutputStream(file);        doc.write(os);        os.close();    }    private static void createFooter(XWPFDocument doc, XWPFHeaderFooterPolicy policy, XWPFParagraph headerParagraph) throws IOException {        //设置页脚        CTP ctpFooter = CTP.Factory.newInstance();        CTR ctrFooter = ctpFooter.addNewR();        CTText ctFooter = ctrFooter.addNewT();        String footerText = "http://blog.csdn.net/zhouseawater";        ctFooter.setStringValue(footerText);        XWPFParagraph footerParagraph = new XWPFParagraph(ctpFooter, doc);        headerParagraph.setAlignment(ParagraphAlignment.CENTER);        XWPFParagraph[] parsFooter = new XWPFParagraph[1];        parsFooter[0] = footerParagraph;        policy.createFooter(XWPFHeaderFooterPolicy.DEFAULT, parsFooter);    }    private static void createTable(XWPFDocument doc) {        XWPFParagraph para;        XWPFRun run;        XWPFTable table  = doc.createTable(8,4);        table.setCellMargins(10, 5, 3, 5);        String[] title1 = new String[]{"编号"," ","项目类型"," "};        String[] title2 = new String[]{"调查日期"," ","建设状态"," "};        XWPFTableRow row;        XWPFTableCell cell;        CTTcPr cellPr;        for(int j=0;j<8;j++) {            row = table.getRow(j);            row.setHeight(600);            //第一行            for (int i = 0; i < title1.length; i++) {                //创建单元格                cell = row.getCell(i);                //单元格属性                cellPr = cell.getCTTc().addNewTcPr();                //设置宽度                cellPr.addNewTcW().setW(BigInteger.valueOf(5000));                //垂直居中                cellPr.addNewVAlign().setVal(STVerticalJc.CENTER);                //第一个段落                para = cell.getParagraphs().get(0);                //设置对齐方式                para.setAlignment(ParagraphAlignment.CENTER);                //段落的对齐方式 1左 2中 3右 4往上 左 不可写0和负数                para.setFontAlignment(2);                //一个XWPFRun代表具有相同属性的一个区域：一段文本                run = para.createRun();                //设置字体                run.setFontFamily("仿宋");                //设置字体大小                run.setFontSize(13);                run.setText(title1[i]);            }        }    }}